{"version":3,"file":"extension-web.js","mappings":"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","sources":[".././node_modules/os-browserify/main.js",".././src/util.js","../external commonjs \"vscode\"","../webpack/bootstrap",".././src/extension.js"],"sourcesContent":["module.exports = require('os');\n","var vscode = require('vscode');\nvar os = require(\"os\");\nvar window = vscode.window;\nvar workspace = vscode.workspace;\n\nvar defaultIcon = '$(checklist)';\nvar zapIcon = '$(zap)';\nvar defaultMsg = '0';\n\nvar DEFAULT_KEYWORDS = {\n    \"TODO:\": {\n        text: \"TODO:\",\n        color: '#fff',\n        backgroundColor: '#ffbd2a',\n        overviewRulerColor: 'rgba(255,189,42,0.8)'\n    },\n    \"FIXME:\": {\n        text: \"FIXME:\",\n        color: '#fff',\n        backgroundColor: '#f06292',\n        overviewRulerColor: 'rgba(240,98,146,0.8)'\n    }\n};\n\nvar DEFAULT_STYLE = {\n    color: \"#2196f3\",\n    backgroundColor: \"#ffeb3b\",\n};\n\nfunction getAssembledData(keywords, customDefaultStyle, isCaseSensitive) {\n    var result = {}, regex = [], reg;\n    Object.keys(keywords).forEach((v) => {\n        v = typeof v == 'string' ? { text: v } : v;\n        var text = v.text;\n        if (!text) return;//NOTE: in case of the text is empty\n\n        if (!isCaseSensitive) {\n            text = text.toUpperCase();\n        }\n\n        if (text == 'TODO:' || text == 'FIXME:') {\n            v = Object.assign({}, DEFAULT_KEYWORDS[text], v);\n        }\n        result[text] = Object.assign({}, DEFAULT_STYLE, customDefaultStyle, v);\n\n        if (v.regex) {\n            regex.push(regex.pattern||text);\n        }\n    })\n\n    if (regex) {\n        reg = regex.join('|');\n    }\n\n    // Don't override existing regex keywords with matching defaults\n    Object.keys(DEFAULT_KEYWORDS).filter(v => {\n        if (reg) {\n            if (v.match(new RegExp(reg))) {\n                return false;\n            }\n        }\n\n        return true;\n    }).forEach(v => {\n        if (!result[v]) {\n            result[v] = Object.assign({}, DEFAULT_STYLE, customDefaultStyle, DEFAULT_KEYWORDS[v]);\n        }\n    });\n\n    return result;\n}\n\nfunction chooseAnnotationType(availableAnnotationTypes) {\n    return window.showQuickPick(availableAnnotationTypes, {});\n}\n\n//get the include/exclude config\nfunction getPathes(config) {\n    return Array.isArray(config) ?\n        '{' + config.join(',') + '}'\n        : (typeof config == 'string' ? config : '');\n}\n\nfunction searchAnnotations(workspaceState, pattern, callback) {\n\n    var settings = workspace.getConfiguration('todohighlight');\n    var includePattern = getPathes(settings.get('include')) || '{**/*}';\n    var excludePattern = getPathes(settings.get('exclude'));\n    var limitationForSearch = settings.get('maxFilesForSearch', 5120);\n\n    var statusMsg = ` Searching...`;\n\n    window.processing = true;\n\n    setStatusMsg(zapIcon, statusMsg);\n\n    workspace.findFiles(includePattern, excludePattern, limitationForSearch).then(function (files) {\n\n        if (!files || files.length === 0) {\n            callback({ message: 'No files found' });\n            return;\n        }\n\n        var totalFiles = files.length,\n            progress = 0,\n            times = 0,\n            annotations = {},\n            annotationList = [];\n\n        function file_iterated() {\n            times++;\n            progress = Math.floor(times / totalFiles * 100);\n\n            setStatusMsg(zapIcon, progress + '% ' + statusMsg);\n\n            if (times === totalFiles || window.manullyCancel) {\n                window.processing = true;\n                workspaceState.update('annotationList', annotationList);\n                callback(null, annotations, annotationList);\n            }\n        }\n\n        for (var i = 0; i < totalFiles; i++) {\n\n            workspace.openTextDocument(files[i]).then(function (file) {\n                searchAnnotationInFile(file, annotations, annotationList, pattern);\n                file_iterated();\n            }, function (err) {\n                errorHandler(err);\n                file_iterated();\n            });\n\n        }\n        \n    }, function (err) {\n        errorHandler(err);\n    });\n}\n\nfunction searchAnnotationInFile(file, annotations, annotationList, regexp) {\n    var fileInUri = file.uri.toString();\n    var pathWithoutFile = fileInUri.substring(7, fileInUri.length);\n\n    for (var line = 0; line < file.lineCount; line++) {\n        var lineText = file.lineAt(line).text;\n        var match = lineText.match(regexp);\n        if (match !== null) {\n            if (!annotations.hasOwnProperty(pathWithoutFile)) {\n                annotations[pathWithoutFile] = [];\n            }\n            var content = getContent(lineText, match);\n            if (content.length > 500) {\n                content = content.substring(0, 500).trim() + '...';\n            }\n            var locationInfo = getLocationInfo(fileInUri, pathWithoutFile, lineText, line, match);\n\n            var annotation = {\n                uri: locationInfo.uri,\n                label: content,\n                detail: locationInfo.relativePath,\n                lineNum: line,\n                fileName: locationInfo.absPath,\n                startCol: locationInfo.startCol,\n                endCol: locationInfo.endCol\n            };\n            annotationList.push(annotation);\n            annotations[pathWithoutFile].push(annotation);\n        }\n    }\n}\n\nfunction annotationsFound(err, annotations, annotationList) {\n    if (err) {\n        console.log('todohighlight err:', err);\n        setStatusMsg(defaultIcon, defaultMsg);\n        return;\n    }\n\n    var resultNum = annotationList.length;\n    var tooltip = resultNum + ' result(s) found';\n    setStatusMsg(defaultIcon, resultNum, tooltip);\n    showOutputChannel(annotationList);\n}\n\nfunction showOutputChannel(data) {\n    if (!window.outputChannel) return;\n    window.outputChannel.clear();\n\n    if (data.length === 0) {\n        window.showInformationMessage('No results. (Not included file types and individual files are not searched.)');\n        return;\n    }\n\n    var settings = workspace.getConfiguration('todohighlight');\n    var toggleURI = settings.get('toggleURI', false);\n    var platform = os.platform ? os.platform() : 'browser';\n\n    data.forEach(function (v, i) {\n        // due to an issue of vscode(https://github.com/Microsoft/vscode/issues/586), in order to make file path clickable within the output channel,the file path differs from platform\n        var patternA = '#' + (i + 1) + '\\t' + v.uri + '#' + (v.lineNum + 1);\n        var patternB = '#' + (i + 1) + '\\t' + v.uri + ':' + (v.lineNum + 1) + ':' + (v.startCol + 1);\n        var patterns = [patternA, patternB];\n\n        //for windows\n        var patternType = 0;\n        if (platform == \"linux\" || platform == \"darwin\") {\n            // for linux & mac\n            patternType = 1;\n        }\n        if (toggleURI) {\n            //toggle the pattern\n            patternType = +!patternType;\n        }\n        window.outputChannel.appendLine(patterns[patternType]);\n        window.outputChannel.appendLine('\\t' + v.label + '\\n');\n    });\n    window.outputChannel.show();\n}\n\nfunction getContent(lineText, match) {\n    return lineText.substring(lineText.indexOf(match[0]), lineText.length);\n};\n\nfunction getLocationInfo(fileInUri, pathWithoutFile, lineText, line, match) {\n    var rootPath = workspace.rootPath + '/';\n    var outputFile = pathWithoutFile.replace(rootPath, '');\n    var startCol = lineText.indexOf(match[0]);\n    var endCol = lineText.length;\n    var location = outputFile + ' ' + (line + 1) + ':' + (startCol + 1);\n\n    return {\n        uri: fileInUri,\n        absPath: pathWithoutFile,\n        relativePath: location,\n        startCol: startCol,\n        endCol: endCol\n    };\n};\n\nfunction createStatusBarItem() {\n    var statusBarItem = window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    statusBarItem.text = defaultIcon + defaultMsg;\n    statusBarItem.tooltip = 'List annotations';\n    statusBarItem.command = 'todohighlight.showOutputChannel';\n    return statusBarItem;\n};\n\nfunction errorHandler(err) {\n    window.processing = true;\n    setStatusMsg(defaultIcon, defaultMsg);\n    console.log('todohighlight err:', err);\n}\n\nfunction setStatusMsg(icon, msg, tooltip) {\n    if (window.statusBarItem) {\n        window.statusBarItem.text = `${icon} ${msg}` || '';\n        if (tooltip) {\n            window.statusBarItem.tooltip = tooltip;\n        }\n        window.statusBarItem.show();\n    }\n}\n\nfunction escapeRegExp(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction escapeRegExpGroups(s) {\n    // Lookbehind assertions (\"(?<!abc) & (?<=abc)\") supported from ECMAScript 2018 and onwards. Native in node.js 9 and up.\n    if (parseFloat(process.version.replace('v', '')) > 9.0) {\n        let grpPattern = /(?<!\\\\)(\\()([^?]\\w*(?:\\\\+\\w)*)(\\))?/g;\n        // Make group non-capturing\n        return s.replace(grpPattern, '$1?:$2$3');\n    } else {\n        return escapeRegExpGroupsLegacy(s);\n    }\n}\n\nfunction escapeRegExpGroupsLegacy(s) {\n    return s.replace(/\\(\\?<[=|!][^)]*\\)/g, '') // Remove any unsupported lookbehinds\n        .replace(/((?:[^\\\\]{1}|^)(?:(?:[\\\\]{2})+)?)(\\((?!\\?[:|=|!]))([^)]*)(\\))/g, '$1$2?:$3$4'); // Make all groups non-capturing\n}\n\nmodule.exports = {\n    DEFAULT_STYLE,\n    getAssembledData,\n    chooseAnnotationType,\n    searchAnnotations,\n    annotationsFound,\n    createStatusBarItem,\n    setStatusMsg,\n    showOutputChannel,\n    escapeRegExp,\n    escapeRegExpGroups,\n    escapeRegExpGroupsLegacy\n};\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * vscode plugin for highlighting TODOs and FIXMEs within your code\n *\n * NOTE: each decoration type has a unique key, the highlight and clear highight functionality are based on it\n */\n\nvar vscode = require('vscode');\nvar util = require('./util');\nvar window = vscode.window;\nvar workspace = vscode.workspace;\n\nfunction activate(context) {\n\n    var timeout = null;\n    var activeEditor = window.activeTextEditor;\n    var isCaseSensitive, assembledData, decorationTypes, pattern, styleForRegExp, keywordsPattern;\n    var workspaceState = context.workspaceState;\n\n    var settings = workspace.getConfiguration('todohighlight');\n\n    init(settings);\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.toggleHighlight', function () {\n        settings.update('isEnable', !settings.get('isEnable'), true).then(function () {\n            triggerUpdateDecorations();\n        });\n    }))\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.listAnnotations', function () {\n        if (keywordsPattern.trim()) {\n            util.searchAnnotations(workspaceState, pattern, util.annotationsFound);\n        } else {\n            if (!assembledData) return;\n            var availableAnnotationTypes = Object.keys(assembledData);\n            availableAnnotationTypes.unshift('ALL');\n            util.chooseAnnotationType(availableAnnotationTypes).then(function (annotationType) {\n                if (!annotationType) return;\n                var searchPattern = pattern;\n                if (annotationType != 'ALL') {\n                    annotationType = util.escapeRegExp(annotationType);\n                    searchPattern = new RegExp(annotationType, isCaseSensitive ? 'g' : 'gi');\n                }\n                util.searchAnnotations(workspaceState, searchPattern, util.annotationsFound);\n            });\n        }\n    }));\n\n    context.subscriptions.push(vscode.commands.registerCommand('todohighlight.showOutputChannel', function () {\n        var annotationList = workspaceState.get('annotationList', []);\n        util.showOutputChannel(annotationList);\n    }));\n\n    if (activeEditor) {\n        triggerUpdateDecorations();\n    }\n\n    window.onDidChangeActiveTextEditor(function (editor) {\n        activeEditor = editor;\n        if (editor) {\n            triggerUpdateDecorations();\n        }\n    }, null, context.subscriptions);\n\n    workspace.onDidChangeTextDocument(function (event) {\n        if (activeEditor && event.document === activeEditor.document) {\n            triggerUpdateDecorations();\n        }\n    }, null, context.subscriptions);\n\n    workspace.onDidChangeConfiguration(function () {\n        settings = workspace.getConfiguration('todohighlight');\n\n        //NOTE: if disabled, do not re-initialize the data or we will not be able to clear the style immediatly via 'toggle highlight' command\n        if (!settings.get('isEnable')) return;\n\n        init(settings);\n        triggerUpdateDecorations();\n    }, null, context.subscriptions);\n\n    function updateDecorations() {\n\n        if (!activeEditor || !activeEditor.document) {\n            return;\n        }\n\n        var text = activeEditor.document.getText();\n        var matches = {}, match;\n        while (match = pattern.exec(text)) {\n            var startPos = activeEditor.document.positionAt(match.index);\n            var endPos = activeEditor.document.positionAt(match.index + match[0].length);\n\n            var decoration = {\n                range: new vscode.Range(startPos, endPos)\n            };\n\n            var matchedValue = match[0];\n            let patternIndex = match.slice(1).indexOf(matchedValue);\n            matchedValue = Object.keys(decorationTypes)[patternIndex] || matchedValue;\n\n            if (!isCaseSensitive) {\n                matchedValue = matchedValue.toUpperCase();\n            }\n\n            if (matches[matchedValue]) {\n                matches[matchedValue].push(decoration);\n            } else {\n                matches[matchedValue] = [decoration];\n            }\n\n            if (keywordsPattern.trim() && !decorationTypes[matchedValue]) {\n                decorationTypes[matchedValue] = window.createTextEditorDecorationType(styleForRegExp);\n            }\n        }\n\n        Object.keys(decorationTypes).forEach(v => {\n            var rangeOption = settings.get('isEnable') && matches[v] ? matches[v] : [];\n            var decorationType = decorationTypes[v];\n            activeEditor.setDecorations(decorationType, rangeOption);\n        })\n    }\n\n    function init(settings) {\n        var customDefaultStyle = settings.get('defaultStyle');\n        keywordsPattern = settings.get('keywordsPattern');\n        isCaseSensitive = settings.get('isCaseSensitive', true);\n\n        if (!window.statusBarItem) {\n            window.statusBarItem = util.createStatusBarItem();\n        }\n        if (!window.outputChannel) {\n            window.outputChannel = window.createOutputChannel('TodoHighlight');\n        }\n\n        decorationTypes = {};\n\n        if (keywordsPattern.trim()) {\n            styleForRegExp = Object.assign({}, util.DEFAULT_STYLE, customDefaultStyle, {\n                overviewRulerLane: vscode.OverviewRulerLane.Right\n            });\n\n            pattern = keywordsPattern;\n        } else {\n            assembledData = util.getAssembledData(settings.get('keywords'), customDefaultStyle, isCaseSensitive);\n            Object.keys(assembledData).forEach((v) => {\n                if (!isCaseSensitive) {\n                    v = v.toUpperCase()\n                }\n\n                var mergedStyle = Object.assign({}, {\n                    overviewRulerLane: vscode.OverviewRulerLane.Right\n                }, assembledData[v]);\n\n                if (!mergedStyle.overviewRulerColor) {\n                    // use backgroundColor as the default overviewRulerColor if not specified by the user setting\n                    mergedStyle.overviewRulerColor = mergedStyle.backgroundColor;\n                }\n\n                decorationTypes[v] = window.createTextEditorDecorationType(mergedStyle);\n            });\n\n            // Give each keyword a group in the pattern\n            pattern = Object.keys(assembledData).map((v) => {\n                if (!assembledData[v].regex) {\n                    return `(${util.escapeRegExp(v)})`;\n                }\n\n                let p = assembledData[v].regex.pattern || v;\n                // Ignore unescaped parantheses to avoid messing with our groups\n                return `(${util.escapeRegExpGroups(p)})`\n            }).join('|');\n        }\n\n        pattern = new RegExp(pattern, 'gi');\n        if (isCaseSensitive) {\n            pattern = new RegExp(pattern, 'g');\n        }\n\n    }\n\n    function triggerUpdateDecorations() {\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(updateDecorations, 0);\n    }\n}\n\nexports.activate = activate;\n"],"names":["module","exports","vscode","os","window","workspace","defaultIcon","zapIcon","DEFAULT_KEYWORDS","text","color","backgroundColor","overviewRulerColor","DEFAULT_STYLE","getPathes","config","Array","isArray","join","searchAnnotationInFile","file","annotations","annotationList","regexp","fileInUri","uri","toString","pathWithoutFile","substring","length","line","lineCount","lineText","lineAt","match","hasOwnProperty","content","getContent","trim","locationInfo","getLocationInfo","annotation","label","detail","relativePath","lineNum","fileName","absPath","startCol","endCol","push","showOutputChannel","data","outputChannel","clear","toggleURI","getConfiguration","get","platform","forEach","v","i","patterns","patternType","appendLine","show","showInformationMessage","indexOf","rootPath","outputFile","replace","errorHandler","err","processing","setStatusMsg","console","log","icon","msg","tooltip","statusBarItem","escapeRegExpGroupsLegacy","s","getAssembledData","keywords","customDefaultStyle","isCaseSensitive","reg","result","regex","Object","keys","toUpperCase","assign","pattern","filter","RegExp","chooseAnnotationType","availableAnnotationTypes","showQuickPick","searchAnnotations","workspaceState","callback","settings","includePattern","excludePattern","limitationForSearch","statusMsg","findFiles","then","files","totalFiles","progress","times","openTextDocument","file_iterated","message","Math","floor","manullyCancel","update","annotationsFound","resultNum","createStatusBarItem","StatusBarAlignment","Left","command","escapeRegExp","escapeRegExpGroups","parseFloat","process","version","grpPattern","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","util","activate","context","assembledData","decorationTypes","styleForRegExp","keywordsPattern","timeout","activeEditor","activeTextEditor","updateDecorations","document","getText","matches","exec","startPos","positionAt","index","endPos","decoration","range","Range","matchedValue","patternIndex","slice","createTextEditorDecorationType","rangeOption","decorationType","setDecorations","init","createOutputChannel","overviewRulerLane","OverviewRulerLane","Right","mergedStyle","map","p","triggerUpdateDecorations","clearTimeout","setTimeout","subscriptions","commands","registerCommand","unshift","annotationType","searchPattern","onDidChangeActiveTextEditor","editor","onDidChangeTextDocument","event","onDidChangeConfiguration"],"sourceRoot":""}